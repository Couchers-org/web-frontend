name: Dev - Deploy Frontend on Push

on:
  push:
    branches-ignore:
      - master
      - master-hotfix

defaults:
  run:
    shell: bash

jobs:

  #TEMPTEST
  notify-slack:
    runs-on: [self-hosted, master]
    steps:
    - uses: slackapi/slack-github-action@v1.18.0
      with:
         # C03GZ4K7C7R = Channel #deployment-notifications
        payload: |
          {
            "username": "Github Actions - Deploy Notification",
            "icon_url": "https://avatars.githubusercontent.com/u/44036562?s=280&v=4",
            "text": "${{ github.repository }} was Deployed to Development",
            "channel": "C03GZ4K7C7R",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "${{ github.actor }} has just deployed <https://github.com/${{ github.repository }}|${{ github.repository }}> to <https://couchers.org|Development>.\n*Ref:* <https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}|${{ github.ref_name }}>"
                }
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

  #
  # build:
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: ./.github/actions/build-push-ecr
  #       with:
  #         module-name: frontend
  #         build-for-environment: development
  #
  # # We do this on dev, to make sure that we can build for prod also.
  # # This is incase there are some missing vars or something you've set that are new in dev, but you forgot to set in prod for
  # build-prod:
  #   runs-on: [self-hosted, master]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: ./.github/actions/build-push-ecr
  #       with:
  #         module-name: frontend
  #         build-for-environment: production
  #
  # # Run our tests, with our pre-built test-staged container
  # test-web:
  #   runs-on: [self-hosted, master]
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: ./.github/actions/setup-env
  #     - name: Login to Amazon ECR
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@v1
  #     - shell: bash
  #       run: |
  #         REPO_IMAGE_AND_TAG=${{ steps.login-ecr.outputs.registry }}/frontend:development-${{ env.SLUG }}-stage
  #         docker pull $REPO_IMAGE_AND_TAG
  #         docker run $REPO_IMAGE_AND_TAG yarn test-ci
  #
  # test-web-prettier:
  #   runs-on: [self-hosted, master]
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: ./.github/actions/setup-env
  #     - name: Login to Amazon ECR
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@v1
  #     - shell: bash
  #       run: |
  #         REPO_IMAGE_AND_TAG=${{ steps.login-ecr.outputs.registry }}/frontend:development-${{ env.SLUG }}-stage
  #         docker pull $REPO_IMAGE_AND_TAG
  #         docker run $REPO_IMAGE_AND_TAG yarn prettier --check \*
  #
  # test-storybook:
  #   runs-on: [self-hosted, master]
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: ./.github/actions/setup-env
  #     - name: Login to Amazon ECR
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@v1
  #     - shell: bash
  #       run: |
  #         REPO_IMAGE_AND_TAG=${{ steps.login-ecr.outputs.registry }}/frontend:development-${{ env.SLUG }}-stage
  #         docker pull $REPO_IMAGE_AND_TAG
  #         docker run $REPO_IMAGE_AND_TAG yarn build-storybook
  #
  #
  # # We need to use the deployment name and url in the 'environment' section of the deployment job below
  # # We need then as job outputs to workaround a limitation of github actions: https://github.com/actions/runner/issues/998
  # set-env:
  #   runs-on: [self-hosted, master]
  #   needs: [test-web, test-web-prettier, test-storybook]
  #   outputs:
  #     environment_name: ${{ steps.set-envs.outputs.envname }}
  #     environment_url: ${{ steps.set-envs.outputs.envurl }}
  #     environment_slug: "dev"
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: ./.github/actions/setup-env
  #     - id: set-envs
  #       run: |
  #         echo "::set-output name=envname::${{env.ENV_NAME}}"
  #         echo "::set-output name=envurl::${{env.ENV_URL}}"
  #
  #
  # deploy-dev:
  #   runs-on: [self-hosted, master]
  #   needs: set-env
  #   environment:
  #     name: ${{ needs.set-env.outputs.environment_name }}
  #     url: ${{ needs.set-env.outputs.environment_url }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: ./.github/actions/setup-env
  #     - uses: ./.github/actions/helm-deploy
  #       with:
  #         environment-slug: ${{ needs.set-env.outputs.environment_slug }}
  #         environment-name: ${{ needs.set-env.outputs.environment_name }}
  #         image-tag: development-${{ env.SLUG }}
