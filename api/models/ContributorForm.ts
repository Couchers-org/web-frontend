/* tslint:disable */
/* eslint-disable */
/**
 * Couchers API
 * Couchers API documentation
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ContributorFormContribute,
    ContributorFormContributeFromJSON,
    ContributorFormContributeFromJSONTyped,
    ContributorFormContributeToJSON,
} from './ContributorFormContribute';

/**
 * 
 * @export
 * @interface ContributorForm
 */
export interface ContributorForm {
    /**
     * 
     * @type {number}
     * @memberof ContributorForm
     */
    readonly id: number;
    /**
     * 
     * @type {Date}
     * @memberof ContributorForm
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof ContributorForm
     */
    readonly ideas: string | null;
    /**
     * 
     * @type {string}
     * @memberof ContributorForm
     */
    readonly features: string | null;
    /**
     * 
     * @type {string}
     * @memberof ContributorForm
     */
    readonly experience: string | null;
    /**
     * 
     * @type {ContributorFormContribute}
     * @memberof ContributorForm
     */
    contribute?: ContributorFormContribute | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof ContributorForm
     */
    contributeWays?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ContributorForm
     */
    expertise?: string | null;
    /**
     * 
     * @type {number}
     * @memberof ContributorForm
     */
    readonly user: number;
}

export function ContributorFormFromJSON(json: any): ContributorForm {
    return ContributorFormFromJSONTyped(json, false);
}

export function ContributorFormFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContributorForm {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'ideas': json['ideas'],
        'features': json['features'],
        'experience': json['experience'],
        'contribute': !exists(json, 'contribute') ? undefined : ContributorFormContributeFromJSON(json['contribute']),
        'contributeWays': !exists(json, 'contribute_ways') ? undefined : json['contribute_ways'],
        'expertise': !exists(json, 'expertise') ? undefined : json['expertise'],
        'user': json['user'],
    };
}

export function ContributorFormToJSON(value?: ContributorForm | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'contribute': ContributorFormContributeToJSON(value.contribute),
        'contribute_ways': value.contributeWays,
        'expertise': value.expertise,
    };
}

