/* tslint:disable */
/* eslint-disable */
/**
 * Couchers API
 * Couchers API documentation
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SignupFlow
 */
export interface SignupFlow {
    /**
     * 
     * @type {number}
     * @memberof SignupFlow
     */
    readonly id: number;
    /**
     * 
     * @type {Date}
     * @memberof SignupFlow
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof SignupFlow
     */
    flowToken: string;
    /**
     * 
     * @type {boolean}
     * @memberof SignupFlow
     */
    emailVerified: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SignupFlow
     */
    emailSent: boolean;
    /**
     * 
     * @type {string}
     * @memberof SignupFlow
     */
    emailToken?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof SignupFlow
     */
    emailTokenExpiresAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof SignupFlow
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof SignupFlow
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof SignupFlow
     */
    username?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SignupFlow
     */
    password?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof SignupFlow
     */
    birthdate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof SignupFlow
     */
    gender?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SignupFlow
     */
    city?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SignupFlow
     */
    geom?: string | null;
    /**
     * 
     * @type {number}
     * @memberof SignupFlow
     */
    geomRadius?: number | null;
    /**
     * 
     * @type {number}
     * @memberof SignupFlow
     */
    acceptedTos?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof SignupFlow
     */
    filledFeedback?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof SignupFlow
     */
    ideas?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SignupFlow
     */
    features?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SignupFlow
     */
    experience?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SignupFlow
     */
    contributeWays?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SignupFlow
     */
    expertise?: string | null;
    /**
     * 
     * @type {number}
     * @memberof SignupFlow
     */
    acceptedCommunityGuidelines?: number;
}

export function SignupFlowFromJSON(json: any): SignupFlow {
    return SignupFlowFromJSONTyped(json, false);
}

export function SignupFlowFromJSONTyped(json: any, ignoreDiscriminator: boolean): SignupFlow {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'flowToken': json['flow_token'],
        'emailVerified': json['email_verified'],
        'emailSent': json['email_sent'],
        'emailToken': !exists(json, 'email_token') ? undefined : json['email_token'],
        'emailTokenExpiresAt': !exists(json, 'email_token_expires_at') ? undefined : (json['email_token_expires_at'] === null ? null : new Date(json['email_token_expires_at'])),
        'name': json['name'],
        'email': json['email'],
        'username': !exists(json, 'username') ? undefined : json['username'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'birthdate': !exists(json, 'birthdate') ? undefined : (json['birthdate'] === null ? null : new Date(json['birthdate'])),
        'gender': !exists(json, 'gender') ? undefined : json['gender'],
        'city': !exists(json, 'city') ? undefined : json['city'],
        'geom': !exists(json, 'geom') ? undefined : json['geom'],
        'geomRadius': !exists(json, 'geom_radius') ? undefined : json['geom_radius'],
        'acceptedTos': !exists(json, 'accepted_tos') ? undefined : json['accepted_tos'],
        'filledFeedback': !exists(json, 'filled_feedback') ? undefined : json['filled_feedback'],
        'ideas': !exists(json, 'ideas') ? undefined : json['ideas'],
        'features': !exists(json, 'features') ? undefined : json['features'],
        'experience': !exists(json, 'experience') ? undefined : json['experience'],
        'contributeWays': !exists(json, 'contribute_ways') ? undefined : json['contribute_ways'],
        'expertise': !exists(json, 'expertise') ? undefined : json['expertise'],
        'acceptedCommunityGuidelines': !exists(json, 'accepted_community_guidelines') ? undefined : json['accepted_community_guidelines'],
    };
}

export function SignupFlowToJSON(value?: SignupFlow | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'flow_token': value.flowToken,
        'email_verified': value.emailVerified,
        'email_sent': value.emailSent,
        'email_token': value.emailToken,
        'email_token_expires_at': value.emailTokenExpiresAt === undefined ? undefined : (value.emailTokenExpiresAt === null ? null : value.emailTokenExpiresAt.toISOString()),
        'name': value.name,
        'email': value.email,
        'username': value.username,
        'password': value.password,
        'birthdate': value.birthdate === undefined ? undefined : (value.birthdate === null ? null : value.birthdate.toISOString().substr(0,10)),
        'gender': value.gender,
        'city': value.city,
        'geom': value.geom,
        'geom_radius': value.geomRadius,
        'accepted_tos': value.acceptedTos,
        'filled_feedback': value.filledFeedback,
        'ideas': value.ideas,
        'features': value.features,
        'experience': value.experience,
        'contribute_ways': value.contributeWays,
        'expertise': value.expertise,
        'accepted_community_guidelines': value.acceptedCommunityGuidelines,
    };
}

