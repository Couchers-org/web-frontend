/* tslint:disable */
/* eslint-disable */
/**
 * Couchers API
 * Couchers API documentation
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    FluencyEnum,
    FluencyEnumFromJSON,
    FluencyEnumFromJSONTyped,
    FluencyEnumToJSON,
} from './FluencyEnum';

/**
 * 
 * @export
 * @interface PatchedLanguageAbility
 */
export interface PatchedLanguageAbility {
    /**
     * 
     * @type {number}
     * @memberof PatchedLanguageAbility
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof PatchedLanguageAbility
     */
    readonly name?: string;
    /**
     * 
     * @type {FluencyEnum}
     * @memberof PatchedLanguageAbility
     */
    readonly fluency?: FluencyEnum | null;
    /**
     * 
     * @type {number}
     * @memberof PatchedLanguageAbility
     */
    readonly user?: number;
    /**
     * 
     * @type {number}
     * @memberof PatchedLanguageAbility
     */
    readonly language?: number;
}

export function PatchedLanguageAbilityFromJSON(json: any): PatchedLanguageAbility {
    return PatchedLanguageAbilityFromJSONTyped(json, false);
}

export function PatchedLanguageAbilityFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedLanguageAbility {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'fluency': !exists(json, 'fluency') ? undefined : FluencyEnumFromJSON(json['fluency']),
        'user': !exists(json, 'user') ? undefined : json['user'],
        'language': !exists(json, 'language') ? undefined : json['language'],
    };
}

export function PatchedLanguageAbilityToJSON(value?: PatchedLanguageAbility | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
    };
}

