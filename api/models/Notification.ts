/* tslint:disable */
/* eslint-disable */
/**
 * Couchers API
 * Couchers API documentation
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Notification
 */
export interface Notification {
    /**
     * 
     * @type {number}
     * @memberof Notification
     */
    readonly id: number;
    /**
     * 
     * @type {Date}
     * @memberof Notification
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {number}
     * @memberof Notification
     */
    readonly user: number;
    /**
     * 
     * @type {string}
     * @memberof Notification
     */
    readonly key: string;
    /**
     * 
     * @type {string}
     * @memberof Notification
     */
    readonly avatarKey: string | null;
    /**
     * 
     * @type {string}
     * @memberof Notification
     */
    readonly icon: string | null;
    /**
     * 
     * @type {string}
     * @memberof Notification
     */
    readonly title: string | null;
    /**
     * 
     * @type {string}
     * @memberof Notification
     */
    readonly content: string | null;
    /**
     * 
     * @type {string}
     * @memberof Notification
     */
    readonly link: string | null;
}

export function NotificationFromJSON(json: any): Notification {
    return NotificationFromJSONTyped(json, false);
}

export function NotificationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Notification {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'user': json['user'],
        'key': json['key'],
        'avatarKey': json['avatar_key'],
        'icon': json['icon'],
        'title': json['title'],
        'content': json['content'],
        'link': json['link'],
    };
}

export function NotificationToJSON(value?: Notification | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
    };
}

