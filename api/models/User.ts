/* tslint:disable */
/* eslint-disable */
/**
 * Couchers API
 * Couchers API documentation
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    HostingStatusEnum,
    HostingStatusEnumFromJSON,
    HostingStatusEnumFromJSONTyped,
    HostingStatusEnumToJSON,
} from './HostingStatusEnum';
import {
    MeetupStatusEnum,
    MeetupStatusEnumFromJSON,
    MeetupStatusEnumFromJSONTyped,
    MeetupStatusEnumToJSON,
} from './MeetupStatusEnum';
import {
    PatchedUserParkingDetails,
    PatchedUserParkingDetailsFromJSON,
    PatchedUserParkingDetailsFromJSONTyped,
    PatchedUserParkingDetailsToJSON,
} from './PatchedUserParkingDetails';
import {
    PatchedUserSleepingArrangement,
    PatchedUserSleepingArrangementFromJSON,
    PatchedUserSleepingArrangementFromJSONTyped,
    PatchedUserSleepingArrangementToJSON,
} from './PatchedUserSleepingArrangement';
import {
    PatchedUserSmokingAllowed,
    PatchedUserSmokingAllowedFromJSON,
    PatchedUserSmokingAllowedFromJSONTyped,
    PatchedUserSmokingAllowedToJSON,
} from './PatchedUserSmokingAllowed';

/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * 
     * @type {number}
     * @memberof User
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    readonly username: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    readonly city: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    readonly hometown: string | null;
    /**
     * 
     * @type {Date}
     * @memberof User
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    readonly name: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    readonly gender: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    readonly pronouns: string | null;
    /**
     * 
     * @type {Date}
     * @memberof User
     */
    readonly birthdate: Date | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    readonly fullName: string | null;
    /**
     * 
     * @type {HostingStatusEnum}
     * @memberof User
     */
    readonly hostingStatus: HostingStatusEnum | null;
    /**
     * 
     * @type {MeetupStatusEnum}
     * @memberof User
     */
    readonly meetupStatus: MeetupStatusEnum | null;
    /**
     * 
     * @type {number}
     * @memberof User
     */
    readonly communityStanding: number | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    readonly occupation: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    readonly education: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    readonly aboutMe: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    readonly myTravels: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    readonly thingsILike: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    readonly aboutPlace: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    readonly additionalInformation: string | null;
    /**
     * 
     * @type {number}
     * @memberof User
     */
    readonly maxGuests: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    readonly lastMinute: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    readonly hasPets: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    readonly acceptsPets: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    readonly petDetails: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    readonly hasKids: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    readonly acceptsKids: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    readonly kidDetails: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    readonly hasHousemates: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    readonly housemateDetails: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    readonly wheelchairAccessible: boolean | null;
    /**
     * 
     * @type {PatchedUserSmokingAllowed}
     * @memberof User
     */
    smokingAllowed: PatchedUserSmokingAllowed | null;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    readonly smokesAtHome: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    readonly drinkingAllowed: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    readonly drinksAtHome: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    readonly otherHostInfo: string | null;
    /**
     * 
     * @type {PatchedUserSleepingArrangement}
     * @memberof User
     */
    sleepingArrangement: PatchedUserSleepingArrangement | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    readonly sleepingDetails: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    readonly area: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    readonly houseRules: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    readonly parking: boolean | null;
    /**
     * 
     * @type {PatchedUserParkingDetails}
     * @memberof User
     */
    parkingDetails: PatchedUserParkingDetails | null;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    readonly campingOk: boolean | null;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'username': json['username'],
        'city': json['city'],
        'hometown': json['hometown'],
        'createdAt': (new Date(json['created_at'])),
        'name': json['name'],
        'gender': json['gender'],
        'pronouns': json['pronouns'],
        'birthdate': (json['birthdate'] === null ? null : new Date(json['birthdate'])),
        'fullName': json['full_name'],
        'hostingStatus': HostingStatusEnumFromJSON(json['hosting_status']),
        'meetupStatus': MeetupStatusEnumFromJSON(json['meetup_status']),
        'communityStanding': json['community_standing'],
        'occupation': json['occupation'],
        'education': json['education'],
        'aboutMe': json['about_me'],
        'myTravels': json['my_travels'],
        'thingsILike': json['things_i_like'],
        'aboutPlace': json['about_place'],
        'additionalInformation': json['additional_information'],
        'maxGuests': json['max_guests'],
        'lastMinute': json['last_minute'],
        'hasPets': json['has_pets'],
        'acceptsPets': json['accepts_pets'],
        'petDetails': json['pet_details'],
        'hasKids': json['has_kids'],
        'acceptsKids': json['accepts_kids'],
        'kidDetails': json['kid_details'],
        'hasHousemates': json['has_housemates'],
        'housemateDetails': json['housemate_details'],
        'wheelchairAccessible': json['wheelchair_accessible'],
        'smokingAllowed': PatchedUserSmokingAllowedFromJSON(json['smoking_allowed']),
        'smokesAtHome': json['smokes_at_home'],
        'drinkingAllowed': json['drinking_allowed'],
        'drinksAtHome': json['drinks_at_home'],
        'otherHostInfo': json['other_host_info'],
        'sleepingArrangement': PatchedUserSleepingArrangementFromJSON(json['sleeping_arrangement']),
        'sleepingDetails': json['sleeping_details'],
        'area': json['area'],
        'houseRules': json['house_rules'],
        'parking': json['parking'],
        'parkingDetails': PatchedUserParkingDetailsFromJSON(json['parking_details']),
        'campingOk': json['camping_ok'],
    };
}

export function UserToJSON(value?: User | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'smoking_allowed': PatchedUserSmokingAllowedToJSON(value.smokingAllowed),
        'sleeping_arrangement': PatchedUserSleepingArrangementToJSON(value.sleepingArrangement),
        'parking_details': PatchedUserParkingDetailsToJSON(value.parkingDetails),
    };
}

