/* tslint:disable */
/* eslint-disable */
/**
 * Couchers API
 * Couchers API documentation
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PatchedEventOccurrence
 */
export interface PatchedEventOccurrence {
    /**
     * 
     * @type {number}
     * @memberof PatchedEventOccurrence
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof PatchedEventOccurrence
     */
    content?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedEventOccurrence
     */
    photoKey?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PatchedEventOccurrence
     */
    geom?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PatchedEventOccurrence
     */
    address?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PatchedEventOccurrence
     */
    link?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PatchedEventOccurrence
     */
    during?: string;
    /**
     * 
     * @type {Date}
     * @memberof PatchedEventOccurrence
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PatchedEventOccurrence
     */
    readonly updatedAt?: Date;
    /**
     * 
     * @type {number}
     * @memberof PatchedEventOccurrence
     */
    readonly event?: number;
    /**
     * 
     * @type {number}
     * @memberof PatchedEventOccurrence
     */
    readonly user?: number;
}

export function PatchedEventOccurrenceFromJSON(json: any): PatchedEventOccurrence {
    return PatchedEventOccurrenceFromJSONTyped(json, false);
}

export function PatchedEventOccurrenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedEventOccurrence {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'content': !exists(json, 'content') ? undefined : json['content'],
        'photoKey': !exists(json, 'photo_key') ? undefined : json['photo_key'],
        'geom': !exists(json, 'geom') ? undefined : json['geom'],
        'address': !exists(json, 'address') ? undefined : json['address'],
        'link': !exists(json, 'link') ? undefined : json['link'],
        'during': !exists(json, 'during') ? undefined : json['during'],
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updatedAt': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
        'event': !exists(json, 'event') ? undefined : json['event'],
        'user': !exists(json, 'user') ? undefined : json['user'],
    };
}

export function PatchedEventOccurrenceToJSON(value?: PatchedEventOccurrence | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'content': value.content,
        'photo_key': value.photoKey,
        'geom': value.geom,
        'address': value.address,
        'link': value.link,
        'during': value.during,
    };
}

