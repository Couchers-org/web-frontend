/* tslint:disable */
/* eslint-disable */
/**
 * Couchers API
 * Couchers API documentation
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PatchedDiscussionSubscription
 */
export interface PatchedDiscussionSubscription {
    /**
     * 
     * @type {number}
     * @memberof PatchedDiscussionSubscription
     */
    readonly id?: number;
    /**
     * 
     * @type {Date}
     * @memberof PatchedDiscussionSubscription
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PatchedDiscussionSubscription
     */
    readonly deletedAt?: Date;
    /**
     * 
     * @type {number}
     * @memberof PatchedDiscussionSubscription
     */
    readonly user?: number;
    /**
     * 
     * @type {number}
     * @memberof PatchedDiscussionSubscription
     */
    readonly discussion?: number;
}

export function PatchedDiscussionSubscriptionFromJSON(json: any): PatchedDiscussionSubscription {
    return PatchedDiscussionSubscriptionFromJSONTyped(json, false);
}

export function PatchedDiscussionSubscriptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedDiscussionSubscription {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'deletedAt': !exists(json, 'deleted_at') ? undefined : (new Date(json['deleted_at'])),
        'user': !exists(json, 'user') ? undefined : json['user'],
        'discussion': !exists(json, 'discussion') ? undefined : json['discussion'],
    };
}

export function PatchedDiscussionSubscriptionToJSON(value?: PatchedDiscussionSubscription | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
    };
}

