/* tslint:disable */
/* eslint-disable */
/**
 * Couchers API
 * Couchers API documentation
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ReferenceTypeEnum,
    ReferenceTypeEnumFromJSON,
    ReferenceTypeEnumFromJSONTyped,
    ReferenceTypeEnumToJSON,
} from './ReferenceTypeEnum';

/**
 * 
 * @export
 * @interface PatchedReference
 */
export interface PatchedReference {
    /**
     * 
     * @type {number}
     * @memberof PatchedReference
     */
    readonly id?: number;
    /**
     * 
     * @type {Date}
     * @memberof PatchedReference
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {number}
     * @memberof PatchedReference
     */
    readonly user?: number;
    /**
     * 
     * @type {number}
     * @memberof PatchedReference
     */
    readonly aboutUser?: number;
    /**
     * 
     * @type {ReferenceTypeEnum}
     * @memberof PatchedReference
     */
    readonly type?: ReferenceTypeEnum | null;
    /**
     * 
     * @type {number}
     * @memberof PatchedReference
     */
    readonly hostRequest?: number | null;
    /**
     * 
     * @type {string}
     * @memberof PatchedReference
     */
    text?: string;
    /**
     * 
     * @type {number}
     * @memberof PatchedReference
     */
    rating?: number;
    /**
     * 
     * @type {boolean}
     * @memberof PatchedReference
     */
    wasAppropriate?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PatchedReference
     */
    privateText?: string | null;
}

export function PatchedReferenceFromJSON(json: any): PatchedReference {
    return PatchedReferenceFromJSONTyped(json, false);
}

export function PatchedReferenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedReference {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'user': !exists(json, 'user') ? undefined : json['user'],
        'aboutUser': !exists(json, 'about_user') ? undefined : json['about_user'],
        'type': !exists(json, 'type') ? undefined : ReferenceTypeEnumFromJSON(json['type']),
        'hostRequest': !exists(json, 'host_request') ? undefined : json['host_request'],
        'text': !exists(json, 'text') ? undefined : json['text'],
        'rating': !exists(json, 'rating') ? undefined : json['rating'],
        'wasAppropriate': !exists(json, 'was_appropriate') ? undefined : json['was_appropriate'],
        'privateText': !exists(json, 'private_text') ? undefined : json['private_text'],
    };
}

export function PatchedReferenceToJSON(value?: PatchedReference | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'text': value.text,
        'rating': value.rating,
        'was_appropriate': value.wasAppropriate,
        'private_text': value.privateText,
    };
}

