/* tslint:disable */
/* eslint-disable */
/**
 * Couchers API
 * Couchers API documentation
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Reply
 */
export interface Reply {
    /**
     * 
     * @type {number}
     * @memberof Reply
     */
    readonly id: number;
    /**
     * 
     * @type {number}
     * @memberof Reply
     */
    readonly user: number;
    /**
     * 
     * @type {number}
     * @memberof Reply
     */
    readonly comment: number;
    /**
     * 
     * @type {string}
     * @memberof Reply
     */
    content?: string;
    /**
     * 
     * @type {Date}
     * @memberof Reply
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Reply
     */
    deletedAt?: Date | null;
}

export function ReplyFromJSON(json: any): Reply {
    return ReplyFromJSONTyped(json, false);
}

export function ReplyFromJSONTyped(json: any, ignoreDiscriminator: boolean): Reply {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'user': json['user'],
        'comment': json['comment'],
        'content': !exists(json, 'content') ? undefined : json['content'],
        'createdAt': (new Date(json['created_at'])),
        'deletedAt': !exists(json, 'deleted_at') ? undefined : (json['deleted_at'] === null ? null : new Date(json['deleted_at'])),
    };
}

export function ReplyToJSON(value?: Reply | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'content': value.content,
        'deleted_at': value.deletedAt === undefined ? undefined : (value.deletedAt === null ? null : value.deletedAt.toISOString()),
    };
}

