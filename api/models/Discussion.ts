/* tslint:disable */
/* eslint-disable */
/**
 * Couchers API
 * Couchers API documentation
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Discussion
 */
export interface Discussion {
    /**
     * 
     * @type {number}
     * @memberof Discussion
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof Discussion
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof Discussion
     */
    content?: string;
    /**
     * 
     * @type {Date}
     * @memberof Discussion
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {number}
     * @memberof Discussion
     */
    thread: number;
    /**
     * 
     * @type {number}
     * @memberof Discussion
     */
    readonly user: number;
    /**
     * 
     * @type {number}
     * @memberof Discussion
     */
    ownerCluster: number;
}

export function DiscussionFromJSON(json: any): Discussion {
    return DiscussionFromJSONTyped(json, false);
}

export function DiscussionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Discussion {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'content': !exists(json, 'content') ? undefined : json['content'],
        'createdAt': (new Date(json['created_at'])),
        'thread': json['thread'],
        'user': json['user'],
        'ownerCluster': json['owner_cluster'],
    };
}

export function DiscussionToJSON(value?: Discussion | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'content': value.content,
        'thread': value.thread,
        'owner_cluster': value.ownerCluster,
    };
}

