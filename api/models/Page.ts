/* tslint:disable */
/* eslint-disable */
/**
 * Couchers API
 * Couchers API documentation
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PageTypeEnum,
    PageTypeEnumFromJSON,
    PageTypeEnumFromJSONTyped,
    PageTypeEnumToJSON,
} from './PageTypeEnum';

/**
 * 
 * @export
 * @interface Page
 */
export interface Page {
    /**
     * 
     * @type {number}
     * @memberof Page
     */
    readonly id: number;
    /**
     * 
     * @type {PageTypeEnum}
     * @memberof Page
     */
    type: PageTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof Page
     */
    readonly user: number;
    /**
     * 
     * @type {number}
     * @memberof Page
     */
    parentNode: number;
    /**
     * 
     * @type {number}
     * @memberof Page
     */
    ownerUser?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Page
     */
    ownerCluster?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Page
     */
    thread: number;
}

export function PageFromJSON(json: any): Page {
    return PageFromJSONTyped(json, false);
}

export function PageFromJSONTyped(json: any, ignoreDiscriminator: boolean): Page {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'type': PageTypeEnumFromJSON(json['type']),
        'user': json['user'],
        'parentNode': json['parent_node'],
        'ownerUser': !exists(json, 'owner_user') ? undefined : json['owner_user'],
        'ownerCluster': !exists(json, 'owner_cluster') ? undefined : json['owner_cluster'],
        'thread': json['thread'],
    };
}

export function PageToJSON(value?: Page | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': PageTypeEnumToJSON(value.type),
        'parent_node': value.parentNode,
        'owner_user': value.ownerUser,
        'owner_cluster': value.ownerCluster,
        'thread': value.thread,
    };
}

