/* tslint:disable */
/* eslint-disable */
/**
 * Couchers API
 * Couchers API documentation
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    RoleEnum,
    RoleEnumFromJSON,
    RoleEnumFromJSONTyped,
    RoleEnumToJSON,
} from './RoleEnum';

/**
 * 
 * @export
 * @interface GroupChatSubscription
 */
export interface GroupChatSubscription {
    /**
     * 
     * @type {number}
     * @memberof GroupChatSubscription
     */
    readonly id: number;
    /**
     * 
     * @type {number}
     * @memberof GroupChatSubscription
     */
    readonly user: number;
    /**
     * 
     * @type {number}
     * @memberof GroupChatSubscription
     */
    readonly groupChat: number;
    /**
     * 
     * @type {Date}
     * @memberof GroupChatSubscription
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof GroupChatSubscription
     */
    leftAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof GroupChatSubscription
     */
    unmuteAt?: Date;
    /**
     * 
     * @type {number}
     * @memberof GroupChatSubscription
     */
    lastSeenMessageId?: number;
    /**
     * 
     * @type {RoleEnum}
     * @memberof GroupChatSubscription
     */
    role: RoleEnum;
}

export function GroupChatSubscriptionFromJSON(json: any): GroupChatSubscription {
    return GroupChatSubscriptionFromJSONTyped(json, false);
}

export function GroupChatSubscriptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): GroupChatSubscription {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'user': json['user'],
        'groupChat': json['group_chat'],
        'createdAt': (new Date(json['created_at'])),
        'leftAt': !exists(json, 'left_at') ? undefined : (json['left_at'] === null ? null : new Date(json['left_at'])),
        'unmuteAt': !exists(json, 'unmute_at') ? undefined : (new Date(json['unmute_at'])),
        'lastSeenMessageId': !exists(json, 'last_seen_message_id') ? undefined : json['last_seen_message_id'],
        'role': RoleEnumFromJSON(json['role']),
    };
}

export function GroupChatSubscriptionToJSON(value?: GroupChatSubscription | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'left_at': value.leftAt === undefined ? undefined : (value.leftAt === null ? null : value.leftAt.toISOString()),
        'unmute_at': value.unmuteAt === undefined ? undefined : (value.unmuteAt.toISOString()),
        'last_seen_message_id': value.lastSeenMessageId,
        'role': RoleEnumToJSON(value.role),
    };
}

